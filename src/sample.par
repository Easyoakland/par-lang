define concat = [left][right] left begin {
  empty?     => right
  item[x] xs => .item(x) xs loop
}

define flatten = [tree] tree begin {
  leaf x      => .item(x).empty!
  node[l][r]? => concat(l loop)(r loop)
}

define listrgb =
  .item(.red!)
  .item(.green!)
  .item(.blue!)
  .empty!

define rgb = [value] value {
  red?   => .red!
  green? => .green!
  blue?  => .blue!
}

define zip = [list][seq] list begin {
  empty? => do {
    seq.close?
  } before .empty!

  item[x] xs => do {
    seq.next[y]
  } before .item((x)(y)!) xs loop
}

define zip2 = [seq1][seq2] begin {
  close => do {
    seq1.close?
    seq2.close?
  } before !

  next => do {
    seq1.next[x]
    seq2.next[y]
  } before ((x)(y)!) loop
}
